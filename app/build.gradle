plugins {
    alias(libs.plugins.android.application)
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.rubyproducti9n.secretcop'
    compileSdk 35

    defaultConfig {
        applicationId "com.rubyproducti9n.secretcop"
        minSdk 24
        targetSdk 35
        versionCode 2
        versionName "1.1"

        android.buildFeatures.buildConfig true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def localProperties = new Properties()
        def localPropertiesFile = project.rootProject.file("local.properties")
        if (localPropertiesFile.exists()) {
            localProperties.load(localPropertiesFile.newDataInputStream())
        }
        buildConfigField "String", "MAILGUN_API_KEY", "\"${localProperties['MAILGUN_API_KEY'] ?: ""}\""
    }

    def localProperties = new Properties()
    localProperties.load(project.rootProject.file("local.properties").newDataInputStream())
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "MAILGUN_API_KEY", "\"${localProperties['MAILGUN_API_KEY'] ?: ""}\""
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
        resources {
            excludes += [
                    'META-INF/DEPENDENCIES',
                    'META-INF/DEPENDENCIES.txt',
                    'META-INF/LICENSE',
                    'META-INF/LICENSE.txt',
                    'META-INF/NOTICE',
                    'META-INF/NOTICE.txt'
            ]
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    // Firebase Authentication
    implementation libs.firebase.auth
    implementation libs.play.services.auth

    // Firebase Realtime Database
    implementation libs.firebase.database

    // Firebase Core (Optional but good for Analytics)
    implementation libs.firebase.analytics

    // Google Sign-In with Credential Manager (modern way)
    implementation libs.credentials
    implementation libs.credentials.play.services.auth

    // Optional: Legacy Sign-In (not recommended anymore)
    // implementation 'com.google.android.gms:play-services-auth:20.7.0'

    // Picasso for image loading
    implementation libs.picasso

    // Firebase Cloud Messaging (Optional - for push notifications)
    implementation libs.firebase.messaging

    // Optional: Lottie Animations
    implementation libs.lottie

    implementation libs.mailgun.java
    implementation libs.okhttp
    implementation libs.unirest.java

    //Location
    implementation libs.play.services.location

    // Optional: Glide (if you want to use it instead of Picasso)
    // implementation 'com.github.bumptech.glide:glide:4.16.0'
    // annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    // Firebase BOM (manages all versions consistently)
    implementation platform(libs.firebase.bom)


    //Migration to SplashScreen (Android 12+)
    implementation libs.core.splashscreen
}